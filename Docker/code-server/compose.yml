---
services:
  docker:
    build:
      context: .
      dockerfile_inline: |
        FROM apiv1/code-server:daemon
        COPY --from=apiv1/dind /docker /docker
        COPY --from=apiv1/docker-compose /docker-compose /docker-compose
        COPY --from=apiv1/buildx /buildx /buildx
    entrypoint: sh
    command: |
      -c '
        test -z "${INSTALL_DOCKER:-}" && exit
        echo "install docker..."
        mkdir -p ~/.bin
        mkdir -p ~/.docker/cli-plugins
        test -f ~/.bin/docker || cp /docker ~/.bin/docker
        test -f ~/.bin/docker-compose || cp /docker-compose ~/.bin/docker-compose
        test -f ~/.docker/cli-plugins/docker-buildx || cp /buildx ~/.docker/cli-plugins/docker-buildx
      '
    working_dir: /root
    volumes:
      - root:/root
    depends_on:
      - dind
      - docker-compose
      - buildx
      - code-server
  dind:
    image: apiv1/dind
  docker-compose:
    image: apiv1/docker-compose
  buildx:
    image: apiv1/buildx
  code-server:
    image: apiv1/code-server:daemon
    environment:
      - PUID=${PUID:-1000}
      - PGID=${PGID:-1000}
      - PASSWORD=${PASSWORD:-}
      - HASHED_PASSWORD=${HASHED_PASSWORD:-}
      - PROXY_DOMAIN=${PROXY_DOMAIN:-}
      - CODE_SERVER_BIND_ADDR=${CODE_SERVER_BIND_ADDR:-}
      - CODE_SERVER_ARGS=${CODE_SERVER_ARGS:-}
      - LC_ALL=C.UTF-8
      - LANG=C.UTF-8
      - TZ=Asia/Shanghai
    network_mode: ${NETWORK_MODE:-default}
    volumes:
      - root:/root
      - ${WORKSPACE:-.}:/workspace
      - ${DOCKER_SOCK:-/var/run/docker.sock}:/var/run/docker.sock
    tmpfs:
      - /root/.ssh
    configs:
      - source: .gitconfig
        target: /root/.gitconfig
        mode: 0400
        uid: ${PUID:-1000}
        gid: ${PGID:-1000}
      - source: .bash_aliases
        target: /root/.bash_aliases
        mode: 0400
        uid: ${PUID:-1000}
        gid: ${PGID:-1000}
    ports:
      - ${LISTEN_ADDR:-127.0.0.1:8443}:8443
    restart: unless-stopped
    extra_hosts:
      - "host.docker.internal:host-gateway"
configs:
  .bash_aliases:
    content: |
      export GIT_SSH_COMMAND="ssh -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no"
      export PATH=~/.bin/:"$$PATH"
      mkdir -p ~/.envrc.d
      load_envs() {
        cd ~/.envrc.d >/dev/null 2>&1 || return 1
        for item in `ls -A 2>/dev/null`
        do
          . $$item
        done
        cd - >/dev/null 2>&1
      }
      load_local_ssh_keys() {
        test -d .ssh && cp -R .ssh/* ~/.ssh/ && chmod -R 400 ~/.ssh/
        test -d .ssh.enc && mkdir -p ~/.ssh.enc/ && cp -R .ssh.enc/* ~/.ssh.enc/
      }
      unload_ssh_keys() {
        rm -rf ~/.ssh/*
        unset AES_KEY
      }
      ssh_keys_decrypt() {
        echo "decrypt: ~/.ssh.enc => ~/.ssh"
        test -d ~/.ssh.enc || return 1
        test -z $$AES_KEY && echo -n 'password: ' && read -s AES_KEY && export AES_KEY && echo
        for item in `ls ~/.ssh.enc`
        do
          cat ~/.ssh.enc/$$item | base64 -d | aes -d > ~/.ssh/$$item
          chmod 400 ~/.ssh/$$item
          echo "decrypt: ~/.ssh.enc/$$item => ~/.ssh/$$item"
        done
      }
      ssh_keys_encrypt() {
        echo "encrypt: ~/.ssh => ~/.ssh.enc"
        test -z $$AES_KEY && echo -n 'password: ' && read -s AES_KEY && export AES_KEY && echo
        mkdir -p ~/.ssh.enc
        for item in `ls ~/.ssh`
        do
          cat ~/.ssh/$$item | aes -e | base64 -w 0 > ~/.ssh.enc/$$item
          echo "encrypt: ~/.ssh/$$item => ~/.ssh.enc/$$item"
        done
      }
      ssh_keys_install() {
        git clone https://github.com/apiv1/.ssh.enc ~/.ssh.enc
      }
      myvim_install() {
        git clone https://github.com/myvim/.vim ~/.vim
      }
      richrc_install() {
        wget -qO ~/.envrc.d/.richrc https://apiv1.github.io/Shell/richrc
        load_envs
      }
      load_envs
  .gitconfig:
    content: |
      [safe]
        directory = *
      [credential]
        helper = store
      [url "https://kkgithub.com/"]
        insteadOf = https://github.com/
      [url "ssh://git@ssh.github.com:443/"]
        pushInsteadOf = https://github.com/
      [url "ssh://git@ssh.github.com:443/"]
        insteadOf = git@github.com:
volumes:
  root:
#!/usr/bin/env ruby

require 'git'
require 'gitlab'

CLONE_DIR = ARGV.first
if CLONE_DIR.nil?
  puts 'usage:\n  CI_API_V4_URL=https://<gitlab>/api/v4 GITLAB_API_PRIVATE_TOKEN=<TOKEN> gitlab-clone <clone dir>'
  puts 'options:\n  IGNORE_ARCHIVED_PROJECT # ignore archived project'
  exit
end

IGNORE_ARCHIVED_PROJECT = ENV['IGNORE_ARCHIVED_PROJECT']
FileUtils.mkdir_p(CLONE_DIR)
Gitlab.projects.auto_paginate.map do |repo|
  next if !IGNORE_ARCHIVED_PROJECT.nil? && repo.archived

  save_dir = repo['path_with_namespace']
  puts save_dir
  path = File.join(CLONE_DIR, save_dir)
  if !File.directory?(path)
    puts 'clone'
    Git.clone(repo['ssh_url_to_repo'], save_dir, path: CLONE_DIR)
    puts 'clone end'
  else
    puts 'fetch'
    Git.open(path).fetch
    puts 'fetch end'
  end
  puts
end

export __ENVRC_HOME__="${ENVRC_HOME:-"$HOME/.envrc.d"}"
load_envs() {
  local ENV_PATH="${__ENVRC_HOME__}"
  for item in $(ls -A ${ENV_PATH} 2>/dev/null)
  do
    . "$ENV_PATH/$item"
    local __RESULT_CODE__=$?
    test 0 -eq "$__RESULT_CODE__" &&  (test -n "$ENVRC_DEBUG" && echo "loaded: [$ENV_PATH/$item]" ; :) || echo "error: [$ENV_PATH/$item]"
  done
}
load_envs

envrc_install() {
  local __ENVRC__="${ENVRC:-"$HOME/.envrc"}"
  wget -O "${__ENVRC__}" https://apiv1.github.io/Shell/envrc
  . "${__ENVRC__}"
echo '
Put it into your shell rc file:
    . '${__ENVRC__}'
'
}

richrc_install() {
  mkdir -p "${__ENVRC_HOME__}"
  wget -O "${__ENVRC_HOME__}"/.richrc https://apiv1.github.io/Shell/richrc
  load_envs
}

tmuxrc_install() {
  mkdir -p "${__ENVRC_HOME__}"
  wget -O "${__ENVRC_HOME__}"/tmuxrc https://apiv1.github.io/Shell/tmuxrc
  load_envs
}

dood_install() {
  mkdir -p "${__ENVRC_HOME__}"
  wget -O "${__ENVRC_HOME__}"/docker.envrc https://apiv1.github.io/Docker/docker/docker.envrc
  load_envs
}

myvim_install() {
  mkdir -p "${__ENVRC_HOME__}"
  wget -O "${__ENVRC_HOME__}"/myvim.envrc https://apiv1.github.io/Docker/myvim/myvim.envrc
  load_envs
}

code_server_install() {
  mkdir -p "${__ENVRC_HOME__}"
  wget -O "${__ENVRC_HOME__}"/code-server.envrc https://apiv1.github.io/Docker/code-server/code-server.envrc
  load_envs
}

dict_install() {
  mkdir -p "${__ENVRC_HOME__}"
  wget -O "${__ENVRC_HOME__}"/node-dict.envrc https://apiv1.github.io/Docker/node-dict/node-dict.envrc
  load_envs
}

git_config_install() {
  wget -O ~/.gitconfig https://apiv1.github.io/Git/gitconfig
}

myvim_install () {
  git clone https://github.com/myvim/.vim ~/.vim
}

ssh_keys_decrypt() {
  echo "decrypt: ~/.ssh.enc => ~/.ssh"
  test -d ~/.ssh.enc || return 1
  test -z $AES_KEY && echo -n 'password: ' && read -s AES_KEY && export AES_KEY && echo
  for item in `ls ~/.ssh.enc`
  do
    cat ~/.ssh.enc/$item | base64 -d | aes -d > ~/.ssh/$item
    chmod 400 ~/.ssh/$item
    echo "decrypt: ~/.ssh.enc/$item => ~/.ssh/$item"
  done
}

ssh_keys_encrypt() {
  echo "encrypt: ~/.ssh => ~/.ssh.enc"
  test -z $AES_KEY && echo -n 'password: ' && read -s AES_KEY && export AES_KEY && echo
  mkdir -p ~/.ssh.enc
  for item in `ls ~/.ssh`
  do
    cat ~/.ssh/$item | aes -e | base64 -w 0 > ~/.ssh.enc/$item
    echo "encrypt: ~/.ssh/$item => ~/.ssh.enc/$item"
  done
}

ssh_keys_install () {
  git clone https://github.com/apiv1/.ssh.enc ~/.ssh.enc
}